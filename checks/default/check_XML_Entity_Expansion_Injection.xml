<?xml version="1.0" encoding="UTF-8"?>
<check status="enabled">
    <name><![CDATA[XML Entity Expansion Injection]]></name>
    <description><![CDATA[Using XML parsers configured to not prevent nor limit Document Type Definition (DTD) entity resolution can expose the parser to an XML Entity Expansion injection]]></description>
    <explanation><![CDATA[XML Entity Expansion injection also known as XML Bombs are DoS attacks that benefit from valid and well-formed XML blocks that expand exponentially until they exhaust the server allocated resources. XML allows to define custom entities which act as string substitution macros. By nesting recurrent entity resolutions, an attacker may easily crash the server resources.

The following XML document shows an example of an XML Bomb.

KF_CODE_EXAMPLE
<?xml version="1.0"?>
<!DOCTYPE lolz [
<!ENTITY lol "lol">
<!ENTITY lol2 "&lol;&lol;&lol;&lol;&lol;&lol;&lol;&lol;&lol;&lol;">
<!ENTITY lol3 "&lol2;&lol2;&lol2;&lol2;&lol2;&lol2;&lol2;&lol2;&lol2;&lol2;">
<!ENTITY lol4 "&lol3;&lol3;&lol3;&lol3;&lol3;&lol3;&lol3;&lol3;&lol3;&lol3;">
<!ENTITY lol5 "&lol4;&lol4;&lol4;&lol4;&lol4;&lol4;&lol4;&lol4;&lol4;&lol4;">
<!ENTITY lol6 "&lol5;&lol5;&lol5;&lol5;&lol5;&lol5;&lol5;&lol5;&lol5;&lol5;">
<!ENTITY lol7 "&lol6;&lol6;&lol6;&lol6;&lol6;&lol6;&lol6;&lol6;&lol6;&lol6;">
<!ENTITY lol8 "&lol7;&lol7;&lol7;&lol7;&lol7;&lol7;&lol7;&lol7;&lol7;&lol7;">
<!ENTITY lol9 "&lol8;&lol8;&lol8;&lol8;&lol8;&lol8;&lol8;&lol8;&lol8;&lol8;">
]>
<lolz>&lol9;</lolz>

This test could crash the server by expanding the small XML document into more than 3GB in memory.]]></explanation>
    <severity>Medium</severity>
    <recommendations>If possible, prohibit the use of DTDs or use an XML parser that limits the expansion of recursive DTD entities. 
Before parsing XML files with associated DTDs, scan for recursive entity declarations and do not continue parsing potentially explosive content. 
Use defusedxml module
</recommendations>
    <links><![CDATA[[1] XML vulnerabilities (https://docs.python.org/2/library/xml.html)
[2] Announcing defusedxml, Fixes for XML Security Issues (http://blog.python.org/2013/02/announcing-defusedxml-fixes-for-xml.html)
[3] defusedxml (https://pypi.python.org/pypi/defusedxml)
[4] defusedexpat (https://pypi.python.org/pypi/defusedexpat)
[5] XML External Entity (XXE) Processing OWASP (https://owasp.org/www-community/vulnerabilities/XML_External_Entity_(XXE)_Processing)
[6] Testing for XML Injection OWASP (https://owasp.org/www-project-web-security-testing-guide/latest/4-Web_Application_Security_Testing/07-Input_Validation_Testing/07-Testing_for_XML_Injection)
[7] XML External Entities The Web Application Security Consortium (http://projects.webappsec.org/w/page/13247003/XML%20External%20Entities)
[8] Standards Mapping - Common Weakness Enumeration CWE ID 776
[9] Standards Mapping - DISA Control Correlation Identifier Version 2 CCI-001094, CCI-001310, CCI-002385
[10] Standards Mapping - NIST Special Publication 800-53 Revision 4 SC-5 Denial of Service Protection (P1)
[11] Standards Mapping - NIST Special Publication 800-53 Revision 5 SC-5 Denial of Service Protection
[12] Standards Mapping - OWASP Top 10 2004 A9 Application Denial of Service
[13] Standards Mapping - OWASP Top 10 2007 A2 Injection Flaws
[14] Standards Mapping - OWASP Top 10 2010 A1 Injection
[15] Standards Mapping - OWASP Top 10 2013 A1 Injection
[16] Standards Mapping - OWASP Top 10 2017 A4 XML External Entities (XXE)
[17] Standards Mapping - OWASP Mobile 2014 M1 Weak Server Side Controls
[18] Standards Mapping - OWASP Application Security Verification Standard 4.0 12.1.2 File Upload Requirements
[19] Standards Mapping - Payment Card Industry Data Security Standard Version 1.1 Requirement 6.5.9
[20] Standards Mapping - Payment Card Industry Data Security Standard Version 3.0 Requirement 6.5.1
[21] Standards Mapping - Payment Card Industry Data Security Standard Version 3.1 Requirement 6.5.1
[22] Standards Mapping - Payment Card Industry Data Security Standard Version 3.2 Requirement 6.5.1
[23] Standards Mapping - Payment Card Industry Data Security Standard Version 3.2.1 Requirement 6.5.1
[24] Standards Mapping - Payment Card Industry Software Security Framework 1.0 Control Objective 4.2 - Critical Asset Protection
[25] Standards Mapping - Payment Card Industry Software Security Framework 1.1 Control Objective 4.2 - Critical Asset Protection, Control Objective B.3.1 - Terminal Software Attack Mitigation, Control Objective B.3.1.1 - Terminal Software Attack Mitigation
[26] Standards Mapping - Security Technical Implementation Guide Version 3.1 APP6080 CAT II
[27] Standards Mapping - Security Technical Implementation Guide Version 3.4 APP6080 CAT II
[28] Standards Mapping - Security Technical Implementation Guide Version 3.5 APP6080 CAT II
[29] Standards Mapping - Security Technical Implementation Guide Version 3.6 APP6080 CAT II
[30] Standards Mapping - Security Technical Implementation Guide Version 3.7 APP6080 CAT II
[31] Standards Mapping - Security Technical Implementation Guide Version 3.9 APP6080 CAT II
[32] Standards Mapping - Security Technical Implementation Guide Version 3.10 APP6080 CAT II
[33] Standards Mapping - Security Technical Implementation Guide Version 4.1 APSC-DV-002390 CAT II, APSC-DV-002400 CAT II, APSC-DV-002550 CAT I
[34] Standards Mapping - Security Technical Implementation Guide Version 4.2 APSC-DV-002390 CAT II, APSC-DV-002400 CAT II, APSC-DV-002550 CAT I
[35] Standards Mapping - Security Technical Implementation Guide Version 4.3 APSC-DV-002390 CAT II, APSC-DV-002400 CAT II, APSC-DV-002550 CAT I
[36] Standards Mapping - Security Technical Implementation Guide Version 4.4 APSC-DV-002390 CAT II, APSC-DV-002400 CAT II, APSC-DV-002550 CAT I
[37] Standards Mapping - Security Technical Implementation Guide Version 4.5 APSC-DV-002390 CAT II, APSC-DV-002400 CAT II, APSC-DV-002550 CAT I
[38] Standards Mapping - Security Technical Implementation Guide Version 4.6 APSC-DV-002390 CAT II, APSC-DV-002400 CAT II, APSC-DV-002550 CAT I
[39] Standards Mapping - Security Technical Implementation Guide Version 4.7 APSC-DV-002390 CAT II, APSC-DV-002400 CAT II, APSC-DV-002550 CAT I
[40] Standards Mapping - Security Technical Implementation Guide Version 4.8 APSC-DV-002390 CAT II, APSC-DV-002400 CAT II, APSC-DV-002550 CAT I
[41] Standards Mapping - Security Technical Implementation Guide Version 4.9 APSC-DV-002390 CAT II, APSC-DV-002400 CAT II, APSC-DV-002550 CAT I
[42] Standards Mapping - Security Technical Implementation Guide Version 4.10 APSC-DV-002390 CAT II, APSC-DV-002400 CAT II, APSC-DV-002550 CAT I
[43] Standards Mapping - Security Technical Implementation Guide Version 4.11 APSC-DV-002390 CAT II, APSC-DV-002400 CAT II, APSC-DV-002550 CAT I
[44] Standards Mapping - Security Technical Implementation Guide Version 5.1 APSC-DV-002390 CAT II, APSC-DV-002400 CAT II, APSC-DV-002550 CAT I
[45] Standards Mapping - Web Application Security Consortium 24 + 2 Denial of Service
[46] Standards Mapping - Web Application Security Consortium Version 2.00 XML Entity Expansion (WASC-44)
]]></links>
    <patterns>
        <pattern_simple>
            <function_call>
                <name operator="eq">xml.etree.ElementTree.parse</name>
            </function_call>
        </pattern_simple>
        <pattern_simple>
            <function_call>
                <name operator="eq">xml.etree.ElementTree.fromstring</name>
            </function_call>
        </pattern_simple>
        <pattern_simple>
            <function_call>
                <name operator="eq">xml.etree.ElementTree.iterparse</name>
            </function_call>
        </pattern_simple>
        <pattern_simple>
            <function_call>
                <name operator="eq">xml.etree.ElementTree.XMLID</name>
            </function_call>
        </pattern_simple>
        <pattern_simple>
            <function_call>
                <name operator="eq">xml.etree.ElementTree.XML</name>
            </function_call>
        </pattern_simple>
        <pattern_simple>
            <function_call>
                <name operator="eq">xml.dom.minidom.parse</name>
            </function_call>
        </pattern_simple>
        <pattern_simple>
            <function_call>
                <name operator="eq">xml.dom.minidom.parseString</name>
            </function_call>
        </pattern_simple>
        <pattern_simple>
            <function_call>
                <name operator="eq">xml.dom.pulldom.parse</name>
            </function_call>
        </pattern_simple>
        <pattern_simple>
            <function_call>
                <name operator="eq">xml.dom.pulldom.parseString</name>
            </function_call>
        </pattern_simple>
        <pattern_simple>
            <function_call>
                <name operator="eq">xml.sax.make_parser</name>
            </function_call>
        </pattern_simple>
        <pattern_simple>
            <function_call>
                <name operator="eq">xml.sax.parse</name>
            </function_call>
        </pattern_simple>
        <pattern_simple>
            <function_call>
                <name operator="eq">xml.sax.parseString</name>
            </function_call>
        </pattern_simple>
        <pattern_simple>
            <function_call>
                <name operator="eq">xml.parsers.expat.ParserCreate</name>
            </function_call>
        </pattern_simple>
    </patterns>
</check>
